# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
golang-docker-workspace: &golang-docker-workspace
  docker:
    - image: circleci/golang:1.17
  working_directory: /go/src/github.com/samanthaq/terraform-provider-circleci

python-docker-workspace: &python-docker-workspace
  docker:
    - image: circleci/python:3.8
  working_directory: /tmp/workspace

version: 2
jobs:
  build:
    <<: *golang-docker-workspace
    steps:
      - checkout
      - run:
          name: Build provider
          command: make build

  test:
    <<: *golang-docker-workspace
    steps:
      - checkout
      - run:
          name: Acceptance tests
          command: make testacc
      - run:
          name: Test sweepers
          command: make sweep

  tag-test:
    <<: *python-docker-workspace
    steps:
      - checkout:
          path: /tmp/workspace
      - run:
          name: Install commitizen
          command: |
            pip3 install --user --upgrade --upgrade-strategy eager commitizen==2.1.0
      - run:
          name: Test that creating new Git tag works
          command: |
            git config --global user.email "svc_ci_iaa@mckinsey.com"
            git config --global user.name "svc-ci-iaa"
            cz bump --yes

  tag:
    <<: *python-docker-workspace
    steps:
      - checkout:
          path: /tmp/workspace
      - add_ssh_keys:
          fingerprints:
            - "d2:23:2b:12:c7:50:a6:cf:ea:ea:c3:25:b0:ae:23:cf"
      - run:
          name: Delete all existing ssh-agent keys
          command: ssh-add -D
      - run:
          name: Configure ssh-agent keys
          command: |
            ssh-add $HOME/.ssh/id_rsa_*
            ssh-add -l -E md5
            env | grep SSH_AUTH_SOCK
      - run:
          name: Install commitizen
          command: |
            pip3 install --user --upgrade --upgrade-strategy eager commitizen==2.1.0
      - run:
          name: Create new Git tag
          command: |
            git config --global user.email "svc_ci_iaa@mckinsey.com"
            git config --global user.name "svc-ci-iaa"
            cz bump --yes
            git push origin && git push origin --tags

  publish:
    <<: *golang-docker-workspace
    steps:
      - checkout
      - run:
          name: Install goreleaser
          command: go get github.com/goreleaser/goreleaser
      - run:
          name: Publish terraform artifacts
          command: |
            goreleaser release --skip-validate

# Default workflow filter to trigger on master branch
filter_master: &filter_master
  branches:
    only:
      - master

# Default workflow filter to trigger on PR
filter_PR: &filter_PR
  branches:
    ignore:
      - master

# Default workflow filter to trigger on tagged version
filter_version_tag: &filter_version_tag
  tags:
    only: /^v.*/
  branches:
    ignore: /.*/

workflows:
  version: 2
  build-test-publish:
    jobs:
      - tag-test:
          filters:
            <<: *filter_PR
      - build:
          filters:
            <<: *filter_PR
      - test:
          context: CI_SETTINGS
          requires:
            - build
          filters:
            <<: *filter_PR
      - tag:
          filters:
            <<: *filter_master
      - publish:
          context: CI_SETTINGS
          filters:
            <<: *filter_version_tag
